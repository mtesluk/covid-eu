{"version":3,"sources":["Map.js","Info.js","charts/utils.js","charts/BarChart.js","charts/PieChart.js","ChartsMain.js","ChartsExtra.js","Legend.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","ref","React","createRef","state","loading","coronaData","width","endpoints","countries","map","getComputedStyle","alert","computedStyle","this","current","clientWidth","height","parseFloat","paddingLeft","paddingRight","projection","d3","translate","scale","path","svg","attr","promiseMap","headers","Accept","promiseData","axios","get","Promise","all","then","dataArray","mapData","countriesData","_filterCountries","data","features","feature","properties","setAllData","_reduceCountries","selectAll","enter","append","d","countryName","name","_manageColors","cases","on","setPickedData","deaths","recovered","critical","casesPerOneMillion","deathsPerOneMillion","testsPerOneMillion","setState","amount","min","max","color","range","sovereignts","property","sovereignt","filter","country","includes","reduce","sum","val","className","LinearProgress","Component","Info","cl","prevProps","setTimeout","nextProps","nextState","ranges","manageColors","BarChart","prevState","_prepareBarChart","margin","y","domain","nice","x","length","padding","classSvgName","join","i","bandwidth","call","g","tickFormat","tickSizeOuter","ticks","select","remove","PieChart","console","log","Math","_prepareChart","t","reverse","arc","innerRadius","outerRadius","radius","arcLabel","centroid","arcs","sort","value","pie","text","toLocaleString","endAngle","startAngle","ChartsMain","mostNumCasesChart","lessNumCasesChart","_getWidth","dataMost","el","dataLess","ChartsExtra","mostNumDeathsChart","dataMostDeaths","testsPerMillion","getBackgroundcolor","backgroundColor","Legend","style","App","useState","countryInfo","setCountryInfo","setCountriesData","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3dc64fb3.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Map.scss';\nimport { LinearProgress } from '@material-ui/core';\n\nimport axios from 'axios';\nimport * as d3 from 'd3';\n\n\nclass Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      loading: true,\n      coronaData: {},\n      width: 0,\n      endpoints: {\n        countries: \"https://coronavirus-19-api.herokuapp.com/countries\",\n        map: \"./eu.json\"\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (!getComputedStyle) { alert('Not supported'); }\n    const computedStyle = getComputedStyle(this.ref.current);\n    var width = this.ref.current.clientWidth;\n    width -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n\n    const height = 4/5 * width;\n    const projection = d3.geoMercator()\n               .translate([ width/4, height*1.6 ])\n               .scale([ width/1.1 ]);\n\n    const path = d3.geoPath()\n            .projection(projection);\n\n    const svg = d3.select('.map__svg')\n          .attr('width', width)\n          .attr('height', height);\n\n    const promiseMap = d3.json(this.state.endpoints.map, {\n      headers: { Accept: \"application/json; odata=verbose\"}\n    });\n    const promiseData = axios.get(this.state.endpoints.countries);\n    Promise.all([promiseMap, promiseData]).then(dataArray => {\n      const mapData = dataArray[0];\n      let countriesData = this._filterCountries(dataArray[1].data, mapData.features.map(feature => feature.properties));\n      this.props.setAllData(countriesData);\n      countriesData = this._reduceCountries(countriesData);\n\n      svg.selectAll('path')\n        .data(mapData.features)\n        .enter()\n        .append('path')\n        .attr('d', path)\n        .attr('fill', d => {\n          const countryName  = d.properties.name;\n          var color = this._manageColors(countriesData[countryName]?.cases)\n          return color\n        })\n        .attr('stroke', d => 'red')\n        .on('mouseover', d => {\n          const countryName  = d.properties.name;\n          this.props.setPickedData({\n            countryName,\n            cases: countriesData[countryName]?.cases,\n            deaths: countriesData[countryName]?.deaths,\n            recovered: countriesData[countryName]?.recovered,\n            critical: countriesData[countryName]?.critical,\n            casesPerOneMillion: countriesData[countryName]?.casesPerOneMillion,\n            deathsPerOneMillion: countriesData[countryName]?.deathsPerOneMillion,\n            testsPerOneMillion: countriesData[countryName]?.testsPerOneMillion,\n          });\n        });\n\n        this.setState({\n          ...this.state,\n          loading: false\n        });\n\n        this.setState({\n          ...this.state,\n          coronaData: countriesData\n        });\n    });\n  }\n\n  _manageColors(amount) {\n    if (!amount) return '#ff0909';\n    const ranges = [\n      {min: 0, max: 1000, color: '#fff1d9'},\n      {min: 1001, max: 10000, color: '#fdcd8b'},\n      {min: 10001, max: 50000, color: '#b55440'},\n      {min: 50001, max: 100000, color: '#b53828'},\n      {min: 100001, max: 420001, color: '#500000'},\n    ]\n\n    for(var range of ranges) {\n      if (amount > range.min && amount < range.max) return range.color;\n    }\n    return '#000';\n  }\n\n  _filterCountries(countries, properties) {\n    const sovereignts = properties.map(property => property.sovereignt);\n    countries = countries.filter(country => sovereignts.includes(country.country));\n    return countries;\n  }\n\n  _reduceCountries(countries) {\n    return countries.reduce((sum, val) => ({...sum, [val.country]: val}), {});\n  }\n\n  render() {\n    return (\n      <div className=\"map\" ref={this.ref}>\n        {this.state.loading && <LinearProgress className=\"map__progress\" color=\"secondary\" />}\n        <svg className=\"map__svg\"></svg>\n      </div>\n    )\n  }\n}\n\nexport default Map;","import React from 'react';\n\nimport './Info.scss';\n\n\nclass Info extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      cl: '',\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.countryName !== prevProps.countryName) {\n      setTimeout(() => {\n        this.setState({\n          ...this.state,\n          cl: ''\n        })\n      }, 1000)\n    }\n  }\n\n  getSnapshotBeforeUpdate(nextProps, nextState) {\n    if (this.props.countryName !== nextProps.countryName) {\n      this.setState({\n        ...this.state,\n        cl: 'info__anim'\n      })\n    }\n    return null;\n  }\n\n  render() {\n    return (\n      <div className={\"info \" + this.state.cl}>\n        <p className=\"info__element\">Name: {this.props.countryName || 'none'}</p>\n        <p className=\"info__element\">Cases: {this.props.cases || '0'}</p>\n        <p className=\"info__element\">Deaths: {this.props.deaths || '0'}</p>\n        <p className=\"info__element\">Recovered: {this.props.recovered || '0'}</p>\n        <p className=\"info__element\">Critical: {this.props.critical || '0'}</p>\n        <p className=\"info__element\">Cases Per Million: {this.props.casesPerOneMillion || '0'}</p>\n        <p className=\"info__element\">Deaths Per Million: {this.props.deathsPerOneMillion || '0'}</p>\n        <p className=\"info__element\">Tests Per Million: {this.props.testsPerOneMillion || '0'}</p>\n      </div>\n    )\n  }\n}\n\nexport default Info;","const ranges = [\n  {min: 0, max: 1000, color: '#fff1d9'},\n  {min: 1001, max: 10000, color: '#fdcd8b'},\n  {min: 10001, max: 50000, color: '#b55440'},\n  {min: 50001, max: 100000, color: '#b53828'},\n  {min: 100001, max: 420001, color: '#500000'},\n]\n\nconst manageColors = (amount) => {\n  if (!amount) return '#ff0909';\n\n  for(var range of ranges) {\n    if (amount > range.min && amount < range.max) return range.color;\n  }\n  return '#000';\n}\n\nexport default manageColors;","import React from 'react';\n\nimport './BarChart.scss';\n\nimport * as d3 from 'd3';\nimport manageColors from './utils'\n\n\nclass BarChart extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data) {\n      const width = this.props.width;\n      const height = 4/5 * width;\n      const data = this.props.data\n      this._prepareBarChart(height, width, data);\n    }\n  }\n\n  _prepareBarChart(height, width, data) {\n    const margin = ({top: 30, right: 0, bottom: 30, left: 40});\n    const y = d3.scaleLinear()\n      .domain([0, d3.max(data, d => d.cases)]).nice()\n      .range([height - margin.bottom, margin.top])\n\n    const x = d3.scaleBand()\n      .domain(d3.range(data.length))\n      .range([margin.left, width - margin.right])\n      .padding(0.1);\n\n    const xAxis = g => g\n      .attr(\"transform\", `translate(0,${height - margin.bottom})`)\n      .call(d3.axisBottom(x).tickFormat(i => data[i].country).tickSizeOuter(0));\n\n    const yAxis = g => g\n      .attr(\"transform\", `translate(${margin.left},0)`)\n      .call(d3.axisLeft(y).ticks(null, 's'))\n      .call(g => g.select(\".domain\").remove());\n\n    const svg = d3.select(`.${this.props.classSvgName}`)\n      .attr(\"viewBox\", [0, 0, width, height]);\n\n    svg.append('g')\n      .selectAll('rect')\n      .data(data)\n      .join('rect')\n      .attr('fill', d => manageColors(d.cases))\n      .attr('x', (d, i) => x(i))\n      .attr('y', d => y(d.cases))\n      .attr('height', d => y(0) - y(d.cases))\n      .attr('width', x.bandwidth())\n      .on('mouseover', d => {\n        const countryName  = d.country;\n        this.props.setPickedData({\n          countryName,\n          cases: d.cases,\n          deaths: d.deaths,\n          recovered: d.recovered,\n          critical: d.critical,\n          casesPerOneMillion: d.casesPerOneMillion,\n          deathsPerOneMillion: d.deathsPerOneMillion,\n          testsPerOneMillion: d.testsPerOneMillion,\n        });\n      })\n\n    svg.append(\"g\")\n      .call(xAxis);\n\n    svg.append(\"g\")\n      .call(yAxis);\n  }\n\n  render() {\n    return (\n      <svg className={this.props.classSvgName}></svg>\n    )\n  }\n}\n\nexport default BarChart;","import React from 'react';\n\nimport './PieChart.scss';\n\nimport * as d3 from 'd3';\n\n\nclass PieChart extends React.Component {\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.props.data)\n    if (this.props.data !== prevProps.data) {\n      const data = this.props.data;\n      const width = this.props.width;\n      const height = Math.min(width, 500)\n      this._prepareChart(height, width, data);\n    }\n  }\n\n  _prepareChart(height, width, data) {\n    const color = d3.scaleOrdinal()\n      .domain(data.map(d => d.country))\n      .range(d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data.length).reverse())\n\n    const arc = d3.arc()\n      .innerRadius(0)\n      .outerRadius(Math.min(width, height) / 2 - 1)\n\n    const radius = Math.min(width, height) / 2 * 0.8;\n    const arcLabel = {\n      centroid: d3.arc().innerRadius(radius).outerRadius(radius)\n      }\n\n    const pie = d3.pie()\n      .sort(null)\n      .value(d => d.cases)\n\n    const arcs = pie(data);\n\n    const svg = d3.select(`.${this.props.classSvgName}`)\n        .attr(\"viewBox\", [-width / 2, -height / 2, width, height]);\n\n    svg.append(\"g\")\n      .attr(\"stroke\", \"white\")\n      .selectAll(\"path\")\n      .data(arcs)\n      .join(\"path\")\n      .attr(\"fill\", d => color(d.data.country))\n      .attr(\"d\", arc)\n      .append(\"title\")\n      .text(d => `${d.data.country}: ${d.data.cases.toLocaleString()}`);\n\n    svg.append(\"g\")\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 12)\n      .attr(\"text-anchor\", \"middle\")\n    .selectAll(\"text\")\n    .data(arcs)\n    .join(\"text\")\n      .attr(\"transform\", d => `translate(${arcLabel.centroid(d)})`)\n      .call(text => text.append(\"tspan\")\n          .attr(\"y\", \"-0.4em\")\n          .attr(\"font-weight\", \"bold\")\n          .text(d => d.data.country))\n      .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.25).append(\"tspan\")\n          .attr(\"x\", 0)\n          .attr(\"y\", \"0.7em\")\n          .attr(\"fill-opacity\", 0.7)\n          .text(d => d.data.cases.toLocaleString()));\n  }\n\n  render() {\n    return (\n      <svg className={this.props.classSvgName}></svg>\n    )\n  }\n}\n\nexport default PieChart;","import React from 'react';\n\nimport './Charts.scss';\nimport { LinearProgress } from '@material-ui/core';\n\nimport BarChart from './charts/BarChart';\nimport PieChart from './charts/PieChart';\n\n\nclass ChartsMain extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      loading: true,\n      mostNumCasesChart: {\n        width: 0,\n        data: []\n      },\n      lessNumCasesChart: {\n        width: 0,\n        data: []\n      },\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data) {\n      const width = this._getWidth();\n      const dataMost = this.props.data.filter(el => (el.cases > 100000 || el.country === 'Poland'));\n      const dataLess = this.props.data.filter(el => (el.cases < 3000 || el.country === 'Poland'));\n\n      this.setState({\n        ...this.state,\n        loading: false,\n        mostNumCasesChart: {\n          width,\n          data: dataMost\n        },\n        lessNumCasesChart: {\n          width,\n          data: dataLess\n        },\n      });\n    }\n  }\n\n  _getWidth() {\n    if (!getComputedStyle) { alert('Not supported'); }\n    const computedStyle = getComputedStyle(this.ref.current);\n    var width = this.ref.current.clientWidth;\n    width -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n    return width;\n  }\n\n  render() {\n    return (\n      <div className=\"charts-main\" ref={this.ref}>\n        {this.state.loading && <LinearProgress className=\"charts-main__progress\" color=\"secondary\" />}\n        <header className=\"charts-main__header\">Most numerous countries</header>\n        <BarChart classSvgName=\"charts-main__svg-bar\" setPickedData={this.props.setPickedData} width={this.state.mostNumCasesChart.width} data={this.state.mostNumCasesChart.data}></BarChart>\n        <header className=\"charts-main__header\">Less numerous countries</header>\n        <PieChart classSvgName=\"charts-main__svg-pie\" setPickedData={this.props.setPickedData} width={this.state.lessNumCasesChart.width} data={this.state.lessNumCasesChart.data}></PieChart>\n        <p className=\"charts-main__footer\">Source: https://coronavirus-19-api.herokuapp.com/countries</p>\n      </div>\n    )\n  }\n}\n\nexport default ChartsMain;","import React from 'react';\n\nimport './Charts.scss';\nimport { LinearProgress } from '@material-ui/core';\n\nimport BarChart from './charts/BarChart';\nimport PieChart from './charts/PieChart';\n\n\nclass ChartsExtra extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      loading: true,\n      mostNumDeathsChart: {\n        width: 0,\n        data: []\n      },\n      lessNumCasesChart: {\n        width: 0,\n        data: []\n      },\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.data !== prevProps.data) {\n      const width = this._getWidth();\n      const dataMostDeaths = this.props.data.filter(el => (el.deaths > 20000 || el.country === 'Poland'));\n      const dataLess = this.props.data.filter(el => (el.testsPerMillion > 9000 || el.country === 'Poland'));\n\n      this.setState({\n        ...this.state,\n        loading: false,\n        mostNumDeathsChart: {\n          width,\n          data: dataMostDeaths\n        },\n        lessNumCasesChart: {\n          width,\n          data: dataLess\n        },\n      });\n    }\n  }\n\n  _getWidth() {\n    if (!getComputedStyle) { alert('Not supported'); }\n    const computedStyle = getComputedStyle(this.ref.current);\n    var width = this.ref.current.clientWidth;\n    width -= parseFloat(computedStyle.paddingLeft) + parseFloat(computedStyle.paddingRight);\n    return width;\n  }\n\n  render() {\n    return (\n      <div className=\"charts-extra\" ref={this.ref}>\n        {this.state.loading && <LinearProgress className=\"charts-extra__progress\" color=\"secondary\" />}\n        <header className=\"charts-extra__header\">Most deaths</header>\n        <BarChart classSvgName=\"charts-extra__svg-bar\" setPickedData={this.props.setPickedData} width={this.state.mostNumDeathsChart.width} data={this.state.mostNumDeathsChart.data}></BarChart>\n        <header className=\"charts-extra__header\">Tests</header>\n        <PieChart classSvgName=\"charts-extra__svg-pie\" setPickedData={this.props.setPickedData} width={this.state.lessNumCasesChart.width} data={this.state.lessNumCasesChart.data}></PieChart>\n      </div>\n    )\n  }\n}\n\nexport default ChartsExtra;","import React from 'react';\n\nimport './Legend.scss';\n\nconst getBackgroundcolor = (color) => {\n  return {backgroundColor: color};\n}\n\nconst Legend = (props) => {\n  return (\n    <div className=\"legend\">\n      <h3>Legend</h3>\n      <div className=\"legend__element\" style={getBackgroundcolor(\"#fff1d9\")}>0-1000</div>\n      <div className=\"legend__element\" style={getBackgroundcolor(\"#fdcd8b\")}>1001-10000</div>\n      <div className=\"legend__element\" style={getBackgroundcolor(\"#b55440\")}>10001-50000</div>\n      <div className=\"legend__element\" style={getBackgroundcolor(\"#b53828\")}>50001-100000</div>\n      <div className=\"legend__element\" style={{...getBackgroundcolor(\"#500000\"), color: \"white\"}}>100001-320001</div>\n    </div>\n  )\n}\n\nexport default Legend;","import React, { useState } from 'react';\n\nimport './App.scss';\n\nimport Map from './Map'\nimport Info from './Info'\nimport ChartsMain from './ChartsMain'\nimport ChartsExtra from './ChartsExtra'\nimport Legend from './Legend'\n\nconst App = () => {\n  const [countryInfo, setCountryInfo] = useState({});\n  const [countriesData, setCountriesData] = useState([]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__info\">\n        <Info {...countryInfo}></Info>\n      </div>\n      <div className=\"app__charts-main\">\n        <ChartsMain setPickedData={setCountryInfo} data={countriesData}></ChartsMain>\n      </div>\n      <div className=\"app__content\">\n        <Map setPickedData={setCountryInfo} setAllData={setCountriesData}></Map>\n      </div>\n      <div className=\"app__legend\">\n        <Legend></Legend>\n      </div>\n      <div className=\"app__charts-extra\">\n        <ChartsExtra setPickedData={setCountryInfo} data={countriesData}></ChartsExtra>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}